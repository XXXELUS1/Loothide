# bot.py

import os
import logging
import httpx
from urllib.parse import quote_plus

from dotenv import load_dotenv
from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    WebAppInfo,
)
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
)

# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî –ó–∞–≥—Ä—É–∑–∫–∞ .env ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
load_dotenv()
BOT_TOKEN    = os.getenv("TELEGRAM_TOKEN")
BACKEND_URL  = os.getenv("BACKEND_URL", "").rstrip("/")
WEBAPP_URL   = os.getenv("WEBAPP_URL", "").rstrip("/")
BOT_USERNAME = os.getenv("BOT_USERNAME", "").lstrip("@")

# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî –õ–æ–≥–≥–µ—Ä ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
logging.basicConfig(level=logging.INFO,
    format="%(asctime)s %(levelname)s:%(name)s: %(message)s")
logger = logging.getLogger(__name__)

# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî HTTP-–∫–ª–∏–µ–Ω—Ç ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
http_client = httpx.AsyncClient(timeout=5.0)


async def start_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    tg_user = update.effective_user
    user_id = tg_user.id
    name    = tg_user.first_name or tg_user.username or "–ò–≥—Ä–æ–∫"

    # 1) –ü–∞—Ä—Å–∏–º referrer –∏–∑ deep-link
    referrer_id = None
    if context.args:
        try:
            rid = int(context.args[0])
            if rid != user_id:
                referrer_id = rid
        except ValueError:
            pass

    # 2) –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–≥–æ –∏–ª–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Å—Ç–∞—Ä–æ–≥–æ
    payload = {"user_id": user_id}
    if referrer_id:
        payload["referrer_id"] = referrer_id

    try:
        resp = await http_client.post(f"{BACKEND_URL}/user/create", json=payload)
    except Exception as e:
        logger.error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ /user/create: %s", e)
        return await update.message.reply_text("‚ùóÔ∏è –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.")

    if resp.status_code == 200:
        text = f"üëã –ü—Ä–∏–≤–µ—Ç, {name}! –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã."
        # —É–≤–µ–¥–æ–º–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–µ—Ä–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if referrer_id:
            try:
                await context.bot.send_message(
                    chat_id=referrer_id,
                    text=(
                        f"üéâ –ü–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è(–ª–∞—Å—å) –Ω–æ–≤—ã–π –∏–≥—Ä–æ–∫:\n"
                        f"{name} (ID {user_id})"
                    )
                )
            except Exception:
                pass
    elif resp.status_code == 400 and "already exists" in resp.text.lower():
        text = f"üîÑ –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {name}!"
    else:
        logger.warning("–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–π /user/create: %s %s", resp.status_code, resp.text)
        return await update.message.reply_text("‚ùóÔ∏è –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.")

    # 3) –ë–∞–ª–∞–Ω—Å
    bal = 0.0
    try:
        r2 = await http_client.get(f"{BACKEND_URL}/user/balance/{user_id}")
        if r2.status_code == 200:
            bal = r2.json().get("balance", 0.0)
    except Exception:
        pass

    text += f"\nüí∞ –ë–∞–ª–∞–Ω—Å: {bal:.2f}$"
    text += (
        "\n\nüì≤ /play ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É"
        "\nüîó /referral ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É"
        "\nüë• /myref ‚Äî —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"
        "\nüí≥ /balance ‚Äî —É–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å"
    )
    await update.message.reply_text(text)


async def referral_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    link = f"https://t.me/{BOT_USERNAME}?start={quote_plus(str(user_id))}"
    await update.message.reply_text("üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n" + link)


async def myref_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    try:
        resp = await http_client.get(f"{BACKEND_URL}/user/referrals/{user_id}")
    except Exception as e:
        logger.error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ /user/referrals: %s", e)
        return await update.message.reply_text("‚ùóÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    if resp.status_code != 200:
        return await update.message.reply_text("‚ùóÔ∏è –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤.")
    data = resp.json()
    lines = [f"üèÜ –í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ: {data.get('total_referrals',0)}"]
    for r in data.get("referrals", []):
        joined = r.get("joined_at","")[:10]
        lines.append(f"‚Ä¢ ID {r.get('user_id')}  (joined {joined})")
    await update.message.reply_text("\n".join(lines))


async def balance_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    try:
        resp = await http_client.get(f"{BACKEND_URL}/user/balance/{user_id}")
    except Exception as e:
        logger.error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ /user/balance: %s", e)
        return await update.message.reply_text("‚ùóÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.")
    if resp.status_code != 200:
        return await update.message.reply_text("‚ùóÔ∏è –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –±–∞–ª–∞–Ω—Å–∞.")
    bal = resp.json().get("balance", 0.0)
    await update.message.reply_text(f"üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: {bal:.2f}$")


async def play_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É Web App
    kb = InlineKeyboardMarkup.from_button(
        InlineKeyboardButton(
            text="‚ñ∂Ô∏è –ò–≥—Ä–∞—Ç—å –≤ Crash",
            web_app=WebAppInfo(url=WEBAPP_URL)
        )
    )
    await update.message.reply_text(
        "–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É –≤ Web App:", 
        reply_markup=kb
    )


if __name__ == "__main__":
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    # –∫–æ–º–∞–Ω–¥—ã
    app.add_handler(CommandHandler("start",    start_handler))
    app.add_handler(CommandHandler("referral", referral_handler))
    app.add_handler(CommandHandler("myref",    myref_handler))
    app.add_handler(CommandHandler("balance",  balance_handler))
    app.add_handler(CommandHandler("play",     play_handler))

    logger.info("Bot started. Press Ctrl+C to stop.")
    app.run_polling()
