# bot/handlers/play.py

from telegram import Update, ReplyKeyboardRemove
from telegram.ext import ContextTypes, ConversationHandler, MessageHandler, filters
import aiohttp
from config import API_BASE

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
ASK_STAKE, IN_GAME = range(2)

async def play_start(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü–µ—Ä–≤—ã–π —à–∞–≥: –±–æ—Ç –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ —Å—Ç–∞–≤–∫—É."""
    await update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à—É —Å—Ç–∞–≤–∫—É (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–∏–Ω–æ–≤):",
        reply_markup=ReplyKeyboardRemove()
    )
    return ASK_STAKE

async def play_receive_stake(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü–æ–ª—É—á–∏–ª–∏ —Å—Ç–∞–≤–∫—É, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ—ë, —Å–æ–∑–¥–∞—ë–º –∏–≥—Ä—É –∏ –≤—ã–≤–æ–¥–∏–º game_id."""
    text = update.message.text.strip()
    if not text.isdigit():
        await update.message.reply_text("–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑:")
        return ASK_STAKE

    stake = int(text)
    user_id = update.effective_user.id

    # –í—ã–∑–æ–≤ API /game/start
    async with aiohttp.ClientSession() as sess:
        resp = await sess.post(
            f"{API_BASE}/game/start",
            json={"user_id": user_id, "stake": stake}
        )
        if resp.status != 200:
            err = await resp.json()
            await update.message.reply_text(f"–û—à–∏–±–∫–∞: {err.get('detail') or err}")
            return ConversationHandler.END

        data = await resp.json()
        game_id = data["game_id"]

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ user_data
    ctx.user_data["game_id"] = game_id
    ctx.user_data["stake"] = stake

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ–≥–æ –±—É–¥–µ–º –æ–±–Ω–æ–≤–ª—è—Ç—å
    msg = await update.message.reply_text(
        f"–ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞! game_id = {game_id}\n"
        "–°–µ–∫—É–Ω–¥–æ–º–µ—Ä –∑–∞–ø—É—â–µ–Ω‚Ä¶\n"
        "–°–µ–π—á–∞—Å: multiplier = 1.00, —Ä–∏—Å–∫ = 0.0%",
    )
    ctx.user_data["status_message_id"] = msg.message_id

    # –ó–∞–ø—É—Å–∫–∞–µ–º JobQueue, —á—Ç–æ–±—ã –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –æ–±–Ω–æ–≤–ª—è—Ç—å —Å—Ç–∞—Ç—É—Å
    job = ctx.job_queue.run_repeating(
        callback=update_status,
        interval=1.0,
        first=1.0,
        context={
            "chat_id": update.effective_chat.id,
            "message_id": msg.message_id,
            "game_id": game_id
        }
    )
    ctx.user_data["status_job"] = job

    return IN_GAME

async def update_status(context: ContextTypes.DEFAULT_TYPE):
    """Job-–∫–æ–ª–±—ç–∫: –¥–µ—Ä–≥–∞–µ–º /game/status –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ."""
    job_data = context.job.context
    chat_id = job_data["chat_id"]
    msg_id  = job_data["message_id"]
    game_id = job_data["game_id"]

    # –ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç—É—Å–∞
    async with aiohttp.ClientSession() as sess:
        resp = await sess.get(f"{API_BASE}/game/status/{game_id}")
        data = await resp.json()

    # –ï—Å–ª–∏ –∏–≥—Ä–∞ —É–∂–µ –∑–∞–∫–æ–Ω—á–µ–Ω–∞ ‚Äî –æ—Ç–º–µ–Ω—è–µ–º job –∏ –≤—ã—Ö–æ–¥–∏–º
    if data["status"] != "active":
        context.job.schedule_removal()
        await context.bot.edit_message_text(
            chat_id=chat_id,
            message_id=msg_id,
            text=(
              f"–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n"
              f"–í—ã–∏–≥—Ä—ã—à: {data.get('current_amount',0)+data.get('hidden_amount',0):.2f} –∫–æ–∏–Ω–æ–≤"
            )
        )
        return

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    await context.bot.edit_message_text(
        chat_id=chat_id,
        message_id=msg_id,
        text=(
          f"–ò–≥—Ä–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ ‚è≥\n"
          f"–ú–Ω–æ–∂–∏—Ç–µ–ª—å: {data['multiplier']}\n"
          f"–ù–∞ —Ä—É–∫–∞—Ö: {data['current_amount']:.2f}\n"
          f"–í —Ç–∞–π–Ω–∏–∫–µ: {data['hidden_amount']:.2f}\n"
          f"–†–∏—Å–∫: {data['risk_level']}%\n\n"
          "–ù–∞–∂–º–∏—Ç–µ ¬´–°–ø—Ä—è—Ç–∞—Ç—å¬ª –∏–ª–∏ ¬´–ó–∞–±—Ä–∞—Ç—å¬ª"
        ),
        reply_markup=build_game_keyboard()
    )

def build_game_keyboard():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç InlineKeyboardMarkup —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏."""
    from telegram import InlineKeyboardButton, InlineKeyboardMarkup
    buttons = [
        InlineKeyboardButton("üì¶ –°–ø—Ä—è—Ç–∞—Ç—å", callback_data="hide"),
        InlineKeyboardButton("üèÉ –ó–∞–±—Ä–∞—Ç—å", callback_data="cashout"),
    ]
    return InlineKeyboardMarkup([buttons])

async def cancel_play(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> int:
    """–ï—Å–ª–∏ –¥–∏–∞–ª–æ–≥ –ø—Ä–µ—Ä–≤–∞–Ω ‚Äî –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Job –∏ –æ—á–∏—â–∞–µ–º."""
    if "status_job" in ctx.user_data:
        ctx.user_data["status_job"].schedule_removal()
    await update.message.reply_text("–ò–≥—Ä–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞.")
    return ConversationHandler.END
